### NOTES
# ssh -L doesn't work with forwarding HTTPS traffic: will need to use kubectl port-forward

### REMEMBER
# list pods by label:
# kubectl get pods -l app=rook-ceph-operator
# wait for a pod to be in the `Running` state:
# kubectl wait --for=condition=Ready pod -l app=rook-ceph-operator -n rook-ceph --timeout=5m


# terraform step
# ...

# connect to the control plane

# K8S
mkdir .kube
sudo cp /etc/kubernetes/admin.conf .kube/config
sudo chown ubuntu:ubuntu .kube/config



# ROOK
git clone --single-branch --branch v1.17.0 https://github.com/rook/rook.git
cd rook/deploy/examples
kubectl create -f crds.yaml -f common.yaml -f operator.yaml

# verify the rook-ceph-operator is in the `Running` state before proceeding
kubectl wait --for=condition=Ready pod -l app=rook-ceph-operator -n rook-ceph --timeout=5m

# set default namespace to rook-ceph
kubectl config set-context --current --namespace rook-ceph

# create a cluster
kubectl create -f cluster.yaml

# deploy toolbox
kubectl create -f toolbox.yaml
# wait for the toolbox pod to be in the `Running` state
kubectl -n rook-ceph rollout status deploy/rook-ceph-tools
# connect to the toolbox pod
kubectl -n rook-ceph exec -it deploy/rook-ceph-tools -- bash

# wait for all OSDs to be "up" and health: "HEALTH_OK"
#ubuntu@cp:~/rook/deploy/examples$ kubectl -n rook-ceph exec -it deploy/rook-ceph-tools -- bash -c "ceph status" | grep osd
#    osd: 3 osds: 3 up (since 1.20086s), 3 in (since 62s)
#ubuntu@cp:~/rook/deploy/examples$ kubectl -n rook-ceph exec -it deploy/rook-ceph-tools -- bash -c "ceph status" | grep health
#    health: HEALTH_OK

# get the password for the user "admin" (generated by rook)
kubectl -n rook-ceph get secret rook-ceph-dashboard-password -o jsonpath="{['data']['password']}" | base64 --decode && echo
# ;#JHB1K|~<W{[2gJpZN@


# create a pool
kubectl create -f filesystem.yaml
# create a storage class
kubectl create -f csi/cephfs/storageclass.yaml

# check that the pool was created
kubectl -n rook-ceph exec -it deploy/rook-ceph-tools -- bash -c "ceph fs ls"
#   name: myfs, metadata pool: myfs-metadata, data pools: [myfs-replicated ]
# also maybe "ceph osd lspools"

# ensure that the storage class was created
kubectl get sc

# create a persistent volume claim
kubectl create -f csi/cephfs/pvc.yaml
# check that the PVC was created
kubectl get pvc

# create a pod that uses the PVC
kubectl create -f csi/cephfs/pod.yaml

# check pod logs
kubectl logs deploy/csi-cephfsplugin-provisioner -f csi-provisioner

# turn off ssl (might be redundant)
kubectl -n rook-ceph patch cephcluster rook-ceph --type merge -p '{"spec":{"dashboard":{"ssl":false, "enabled": true, "port": 8443}}}'
# not sure if ssl was the problem or the SSH tunnel, but running port forwarding from my laptop to the control plane worked
# for kubectl to run locally, close the CP:/etc/kubernetes/admin.conf to ~/.kube/config and edit server address
kubectl port-forward service/rook-ceph-mgr-dashboard 8443:8443 -n rook-ceph



# MONITORING
# start prometheus-operator
kubectl apply -f https://raw.githubusercontent.com/coreos/prometheus-operator/v0.40.0/bundle.yaml
kubectl wait --for=condition=Ready pod/prometheus-rook-prometheus-0

# start prometheus instances
cd ~/rook/deploy/examples/monitoring
kubectl create -f service-monitor.yaml
kubectl create -f exporter-service-monitor.yaml
kubectl create -f prometheus.yaml
kubectl create -f prometheus-service.yaml

# note: localhost:30900 doesn't work, but the below IP does
PROMETHEUS_URL="http://$(kubectl -n rook-ceph -o jsonpath={.status.hostIP} get pod prometheus-rook-prometheus-0):30900"

# optional: add grafana through helm
helm repo add grafana https://grafana.github.io/helm-charts
helm repo update
helm install my-release grafana/grafana
# get password for "admin" user
kubectl get secret --namespace rook-ceph my-release-grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
# expose grafana
export GRAFANA_POD_NAME=$(kubectl get pods --namespace rook-ceph -l "app.kubernetes.io/name=grafana,app.kubernetes.io/instance=my-release" -o jsonpath="{.items[0].metadata.name}")
kubectl --namespace rook-ceph port-forward $GRAFANA_POD_NAME 3000
